# PHP as Linux Web App on Azure
# Build, package and deploy your PHP project to Azure Linux Web App.

trigger:
  - main

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: '6b74cdc4-c338-4e97-a361-4aee8bc9e9f0'

  # Web app name
  webAppName: 'banco-del-estudiante'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

  # Environment name
  environmentName: 'banco-del-estudiante'

  # Root folder under which your project files are available.
  rootFolder: $(System.DefaultWorkingDirectory)

stages:
  - stage: Build
    displayName: Build stage
    variables:
      phpVersion: '8.2'
    jobs:
      - job: BuildJob
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              sudo update-alternatives --set php /usr/bin/php$(phpVersion)
              sudo update-alternatives --set phar /usr/bin/phar$(phpVersion)
              sudo update-alternatives --set phpdbg /usr/bin/phpdbg$(phpVersion)
              sudo update-alternatives --set php-cgi /usr/bin/php-cgi$(phpVersion)
              sudo update-alternatives --set phar.phar /usr/bin/phar.phar$(phpVersion)
              php -version
            workingDirectory: $(rootFolder)
            displayName: 'Use PHP version $(phpVersion)'

          # Eliminamos el paso de Composer install
          # - script: composer install --no-interaction --prefer-dist --optimize-autoloader
          #   workingDirectory: $(rootFolder)
          #   displayName: 'Composer install'

          - task: ArchiveFiles@2
            displayName: 'Archive files'
            inputs:
              rootFolderOrFile: '$(rootFolder)'
              includeRootFolder: false
              archiveType: zip
              archiveFile: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
              replaceExistingArchive: true

          - publish: $(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip
            displayName: 'Publish Artifact'
            artifact: drop

  - stage: Deploy
    displayName: 'Deploy Web App'
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeploymentJob
        pool:
          vmImage: $(vmImageName)
        environment: $(environmentName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: 'Deploy Azure Web App : banco-del-estudiante'
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appName: $(webAppName)
                    appType: webAppLinux
                    package: $(Pipeline.Workspace)/drop/$(Build.BuildId).zip
